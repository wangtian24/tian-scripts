from dataclasses import dataclass
from typing import Literal

# Define types
PartsOfSpeech = Literal["noun", "adjective"]


@dataclass
class Word:
    word: str
    categories: list[str]


# Define the word lists
word_list = {
    "noun": [
        Word(word="ability", categories=["thing"]),
        Word(word="account", categories=["thing"]),
        Word(word="accountant", categories=["profession"]),
        Word(word="action", categories=["thing"]),
        Word(word="activity", categories=["thing"]),
        Word(word="actor", categories=["profession"]),
        Word(word="ad", categories=["media"]),
        Word(word="addition", categories=["thing"]),
        Word(word="address", categories=["thing"]),
        Word(word="advantage", categories=["thing"]),
        Word(word="advertisement", categories=["media"]),
        Word(word="afternoon", categories=["time"]),
        Word(word="agency", categories=["thing"]),
        Word(word="agent", categories=["ai", "people", "technology"]),
        Word(word="air", categories=["thing"]),
        Word(word="airline", categories=["transportation"]),
        Word(word="airplane", categories=["transportation"]),
        Word(word="airport", categories=["place", "transportation"]),
        Word(word="alarm", categories=["thing"]),
        Word(word="algorithm", categories=["ai", "technology"]),
        Word(word="alligator", categories=["animal"]),
        Word(word="ambulance", categories=["thing"]),
        Word(word="analyst", categories=["profession"]),
        Word(word="analytics", categories=["ai", "technology"]),
        Word(word="angle", categories=["thing"]),
        Word(word="annotation", categories=["ai", "technology"]),
        Word(word="answer", categories=["thing"]),
        Word(word="apartment", categories=["place"]),
        Word(word="apple", categories=["food"]),
        Word(word="application", categories=["thing"]),
        Word(word="appointment", categories=["thing"]),
        Word(word="architect", categories=["profession"]),
        Word(word="architecture", categories=["ai", "technology"]),
        Word(word="area", categories=["thing"]),
        Word(word="argument", categories=["thing"]),
        Word(word="army", categories=["thing"]),
        Word(word="art", categories=["thing"]),
        Word(word="article", categories=["thing"]),
        Word(word="artist", categories=["profession"]),
        Word(word="australia", categories=["place"]),
        Word(word="author", categories=["profession"]),
        Word(word="automation", categories=["ai", "technology"]),
        Word(word="autumn", categories=["time"]),
        Word(word="baby", categories=["family", "people"]),
        Word(word="baker", categories=["profession"]),
        Word(word="balloon", categories=["thing"]),
        Word(word="banana", categories=["food"]),
        Word(word="barista", categories=["profession"]),
        Word(word="battery", categories=["thing"]),
        Word(word="beach", categories=["place"]),
        Word(word="bed", categories=["thing"]),
        Word(word="belgium", categories=["place"]),
        Word(word="bit", categories=["technology", "thing"]),
        Word(word="book", categories=["education", "thing"]),
        Word(word="boots", categories=["thing"]),
        Word(word="branch", categories=["thing"]),
        Word(word="bread", categories=["food"]),
        Word(word="breakfast", categories=["thing"]),
        Word(word="brother", categories=["family"]),
        Word(word="businessperson", categories=["business", "people"]),
        Word(word="byte", categories=["technology", "thing"]),
        Word(word="camera", categories=["thing"]),
        Word(word="candle", categories=["thing"]),
        Word(word="car", categories=["transportation"]),
        Word(word="caravan", categories=["transportation"]),
        Word(word="carpenter", categories=["profession"]),
        Word(word="carpet", categories=["thing"]),
        Word(word="carrot", categories=["food"]),
        Word(word="cartoon", categories=["media"]),
        Word(word="cat", categories=["animal"]),
        Word(word="chef", categories=["profession"]),
        Word(word="china", categories=["place"]),
        Word(word="city", categories=["place"]),
        Word(word="classification", categories=["ai", "technology"]),
        Word(word="classifier", categories=["ai", "technology"]),
        Word(word="clustering", categories=["ai", "technology"]),
        Word(word="coat", categories=["thing"]),
        Word(word="coffeeshop", categories=["place"]),
        Word(word="computer", categories=["technology", "thing"]),
        Word(word="continent", categories=["place"]),
        Word(word="controller", categories=["technology", "thing"]),
        Word(word="country", categories=["place"]),
        Word(word="cpu", categories=["technology", "thing"]),
        Word(word="crayon", categories=["thing"]),
        Word(word="cricket", categories=["animal"]),
        Word(word="dataset", categories=["ai", "technology"]),
        Word(word="dawn", categories=["time"]),
        Word(word="daybreak", categories=["time"]),
        Word(word="decoder", categories=["ai", "technology"]),
        Word(word="denmark", categories=["place"]),
        Word(word="dentist", categories=["profession"]),
        Word(word="detection", categories=["ai", "technology"]),
        Word(word="diamond", categories=["thing"]),
        Word(word="dinner", categories=["food"]),
        Word(word="doctor", categories=["profession"]),
        Word(word="dream", categories=["thing"]),
        Word(word="dusk", categories=["time"]),
        Word(word="easter", categories=["religion"]),
        Word(word="egg", categories=["food"]),
        Word(word="eggplant", categories=["food"]),
        Word(word="egypt", categories=["place"]),
        Word(word="electrician", categories=["profession"]),
        Word(word="elephant", categories=["animal"]),
        Word(word="embedding", categories=["ai", "technology"]),
        Word(word="encoder", categories=["ai", "technology"]),
        Word(word="energy", categories=["thing"]),
        Word(word="engine", categories=["transportation"]),
        Word(word="engineer", categories=["profession"]),
        Word(word="england", categories=["place"]),
        Word(word="ethics", categories=["ai", "technology"]),
        Word(word="evaluation", categories=["ai", "technology"]),
        Word(word="eve", categories=["time"]),
        Word(word="evening", categories=["time"]),
        Word(word="eventide", categories=["time"]),
        Word(word="exabyte", categories=["technology", "thing"]),
        Word(word="eye", categories=["thing"]),
        Word(word="fall", categories=["time"]),
        Word(word="family", categories=["family"]),
        Word(word="farmer", categories=["profession"]),
        Word(word="feature", categories=["ai", "technology"]),
        Word(word="feedback", categories=["ai", "technology"]),
        Word(word="filter", categories=["ai", "technology"]),
        Word(word="finland", categories=["place"]),
        Word(word="firefighter", categories=["profession"]),
        Word(word="fish", categories=["animal"]),
        Word(word="flag", categories=["thing"]),
        Word(word="florist", categories=["profession"]),
        Word(word="flower", categories=["thing"]),
        Word(word="football", categories=["sports"]),
        Word(word="forest", categories=["place"]),
        Word(word="fountain", categories=["thing"]),
        Word(word="framework", categories=["ai", "technology"]),
        Word(word="france", categories=["place"]),
        Word(word="fruit", categories=["food"]),
        Word(word="furniture", categories=["thing"]),
        Word(word="garage", categories=["place"]),
        Word(word="garden", categories=["food"]),
        Word(word="generation", categories=["ai", "technology"]),
        Word(word="gigabyte", categories=["technology", "thing"]),
        Word(word="glass", categories=["thing"]),
        Word(word="gold", categories=["thing"]),
        Word(word="gpu", categories=["technology", "thing"]),
        Word(word="gradient", categories=["ai", "technology"]),
        Word(word="graph", categories=["ai", "technology"]),
        Word(word="grass", categories=["thing"]),
        Word(word="greece", categories=["place"]),
        Word(word="guitar", categories=["thing"]),
        Word(word="hair", categories=["thing"]),
        Word(word="hairdresser", categories=["profession"]),
        Word(word="hamburger", categories=["food"]),
        Word(word="helicopter", categories=["transportation"]),
        Word(word="helmet", categories=["thing"]),
        Word(word="holiday", categories=["thing"]),
        Word(word="honey", categories=["food"]),
        Word(word="horse", categories=["animal"]),
        Word(word="hospital", categories=["place"]),
        Word(word="house", categories=["place"]),
        Word(word="hydrogen", categories=["science"]),
        Word(word="ice", categories=["science"]),
        Word(word="inference", categories=["ai", "technology"]),
        Word(word="insurance", categories=["thing"]),
        Word(word="intern", categories=["profession"]),
        Word(word="iron", categories=["science"]),
        Word(word="island", categories=["place"]),
        Word(word="jelly", categories=["food"]),
        Word(word="jewellery", categories=["thing"]),
        Word(word="jordan", categories=["place"]),
        Word(word="journalist", categories=["profession"]),
        Word(word="joystick", categories=["technology", "thing"]),
        Word(word="judge", categories=["profession"]),
        Word(word="juice", categories=["food"]),
        Word(word="kangaroo", categories=["animal"]),
        Word(word="keyboard", categories=["technology", "thing"]),
        Word(word="kilobyte", categories=["technology", "thing"]),
        Word(word="kitchen", categories=["place"]),
        Word(word="kite", categories=["thing"]),
        Word(word="lamp", categories=["thing"]),
        Word(word="laptop", categories=["technology", "thing"]),
        Word(word="lawyer", categories=["profession"]),
        Word(word="layer", categories=["ai", "technology"]),
        Word(word="learning", categories=["ai", "technology"]),
        Word(word="leather", categories=["thing"]),
        Word(word="librarian", categories=["profession"]),
        Word(word="library", categories=["place"]),
        Word(word="lifeguard", categories=["profession"]),
        Word(word="lighter", categories=["thing"]),
        Word(word="lion", categories=["animal"]),
        Word(word="lizard", categories=["animal"]),
        Word(word="lock", categories=["thing"]),
        Word(word="logic", categories=["ai", "technology"]),
        Word(word="london", categories=["place"]),
        Word(word="lunch", categories=["food"]),
        Word(word="machine", categories=["science"]),
        Word(word="magazine", categories=["media"]),
        Word(word="magician", categories=["people"]),
        Word(word="manchester", categories=["place"]),
        Word(word="market", categories=["place"]),
        Word(word="match", categories=["thing"]),
        Word(word="matrix", categories=["ai", "technology"]),
        Word(word="mechanic", categories=["profession"]),
        Word(word="megabyte", categories=["technology", "thing"]),
        Word(word="memory", categories=["technology", "thing"]),
        Word(word="metric", categories=["ai", "technology"]),
        Word(word="microphone", categories=["thing"]),
        Word(word="midnight", categories=["time"]),
        Word(word="milk", categories=["food"]),
        Word(word="minister", categories=["people", "religion"]),
        Word(word="model", categories=["ai", "technology"]),
        Word(word="monitor", categories=["technology", "thing"]),
        Word(word="monkey", categories=["animal"]),
        Word(word="morn", categories=["time"]),
        Word(word="morning", categories=["time"]),
        Word(word="mother", categories=["family", "people"]),
        Word(word="motherboard", categories=["technology", "thing"]),
        Word(word="motorcycle", categories=["transportation"]),
        Word(word="mouse", categories=["animal", "technology", "thing"]),
        Word(word="musician", categories=["profession"]),
        Word(word="nail", categories=["thing"]),
        Word(word="napkin", categories=["thing"]),
        Word(word="needle", categories=["thing"]),
        Word(word="nest", categories=["thing"]),
        Word(word="network", categories=["ai", "technology"]),
        Word(word="neuron", categories=["ai", "technology"]),
        Word(word="nigeria", categories=["place"]),
        Word(word="night", categories=["time"]),
        Word(word="nightfall", categories=["time"]),
        Word(word="noodle", categories=["food"]),
        Word(word="noon", categories=["time"]),
        Word(word="notebook", categories=["thing"]),
        Word(word="nurse", categories=["profession"]),
        Word(word="ocean", categories=["place"]),
        Word(word="oil", categories=["thing"]),
        Word(word="optician", categories=["profession"]),
        Word(word="optimization", categories=["ai", "technology"]),
        Word(word="orange", categories=["food"]),
        Word(word="oxygen", categories=["science"]),
        Word(word="oyster", categories=["animal"]),
        Word(word="painter", categories=["profession"]),
        Word(word="painting", categories=["media"]),
        Word(word="parameter", categories=["ai", "technology"]),
        Word(word="park", categories=["place"]),
        Word(word="parrot", categories=["animal"]),
        Word(word="pattern", categories=["ai", "technology"]),
        Word(word="pencil", categories=["education", "thing"]),
        Word(word="perception", categories=["ai", "technology"]),
        Word(word="petabyte", categories=["technology", "thing"]),
        Word(word="pharmacist", categories=["profession"]),
        Word(word="photographer", categories=["profession"]),
        Word(word="piano", categories=["thing"]),
        Word(word="pillow", categories=["thing"]),
        Word(word="pilot", categories=["profession"]),
        Word(word="pipeline", categories=["ai", "technology"]),
        Word(word="pizza", categories=["food"]),
        Word(word="planet", categories=["science"]),
        Word(word="plastic", categories=["thing"]),
        Word(word="plumber", categories=["profession"]),
        Word(word="portugal", categories=["place"]),
        Word(word="postman", categories=["profession"]),
        Word(word="prediction", categories=["ai", "technology"]),
        Word(word="preprocessing", categories=["ai", "technology"]),
        Word(word="printer", categories=["technology", "thing"]),
        Word(word="processor", categories=["technology", "thing"]),
        Word(word="quill", categories=["thing"]),
        Word(word="rain", categories=["thing"]),
        Word(word="rainbow", categories=["science"]),
        Word(word="raincoat", categories=["thing"]),
        Word(word="ram", categories=["technology", "thing"]),
        Word(word="reasoning", categories=["ai", "technology"]),
        Word(word="receptionist", categories=["profession"]),
        Word(word="recognition", categories=["ai", "technology"]),
        Word(word="refrigerator", categories=["food"]),
        Word(word="regression", categories=["ai", "technology"]),
        Word(word="reinforcement", categories=["ai", "technology"]),
        Word(word="restaurant", categories=["place"]),
        Word(word="rice", categories=["food"]),
        Word(word="river", categories=["thing"]),
        Word(word="robot", categories=["ai", "technology"]),
        Word(word="rocket", categories=["science"]),
        Word(word="room", categories=["place"]),
        Word(word="rose", categories=["thing"]),
        Word(word="salad", categories=["food"]),
        Word(word="salesperson", categories=["business", "people"]),
        Word(word="sampling", categories=["ai", "technology"]),
        Word(word="sandwich", categories=["food"]),
        Word(word="scaling", categories=["ai", "technology"]),
        Word(word="school", categories=["education"]),
        Word(word="scientist", categories=["profession"]),
        Word(word="scooter", categories=["transportation"]),
        Word(word="secretary", categories=["profession"]),
        Word(word="semantic", categories=["ai", "technology"]),
        Word(word="sequence", categories=["ai", "technology"]),
        Word(word="server", categories=["profession"]),
        Word(word="shampoo", categories=["thing"]),
        Word(word="shoe", categories=["thing"]),
        Word(word="simulation", categories=["ai", "technology"]),
        Word(word="smartphone", categories=["technology", "thing"]),
        Word(word="soccer", categories=["sports"]),
        Word(word="solstice", categories=["time"]),
        Word(word="soup", categories=["food"]),
        Word(word="spoon", categories=["thing"]),
        Word(word="spring", categories=["time"]),
        Word(word="state", categories=["place"]),
        Word(word="stone", categories=["thing"]),
        Word(word="student", categories=["education", "people"]),
        Word(word="summer", categories=["time"]),
        Word(word="sundown", categories=["time"]),
        Word(word="sunset", categories=["time"]),
        Word(word="sweden", categories=["place"]),
        Word(word="synthesis", categories=["ai", "technology"]),
        Word(word="table", categories=["thing"]),
        Word(word="tailor", categories=["profession"]),
        Word(word="teacher", categories=["education", "people", "profession"]),
        Word(word="telephone", categories=["thing"]),
        Word(word="television", categories=["media"]),
        Word(word="tensor", categories=["ai", "technology"]),
        Word(word="tent", categories=["thing"]),
        Word(word="terabyte", categories=["technology", "thing"]),
        Word(word="testing", categories=["ai", "technology"]),
        Word(word="thailand", categories=["place"]),
        Word(word="tiger", categories=["animal"]),
        Word(word="tomato", categories=["food"]),
        Word(word="toothbrush", categories=["thing"]),
        Word(word="train", categories=["transportation"]),
        Word(word="training", categories=["ai", "technology"]),
        Word(word="transformer", categories=["ai", "technology"]),
        Word(word="translator", categories=["profession"]),
        Word(word="truck", categories=["thing", "transportation"]),
        Word(word="twilight", categories=["time"]),
        Word(word="umbrella", categories=["thing"]),
        Word(word="validation", categories=["ai", "technology"]),
        Word(word="van", categories=["transportation"]),
        Word(word="vase", categories=["thing"]),
        Word(word="vector", categories=["ai", "technology"]),
        Word(word="vegetable", categories=["food"]),
        Word(word="vision", categories=["ai", "technology"]),
        Word(word="visualization", categories=["ai", "technology"]),
        Word(word="vr", categories=["technology", "thing"]),
        Word(word="wall", categories=["thing"]),
        Word(word="water", categories=["food"]),
        Word(word="whale", categories=["animal"]),
        Word(word="window", categories=["thing"]),
        Word(word="winter", categories=["time"]),
        Word(word="wire", categories=["thing"]),
        Word(word="wolf", categories=["animal"]),
        Word(word="xylophone", categories=["thing"]),
        Word(word="yacht", categories=["transportation"]),
        Word(word="yak", categories=["animal"]),
        Word(word="yottabyte", categories=["technology", "thing"]),
        Word(word="zebra", categories=["animal"]),
        Word(word="zettabyte", categories=["technology", "thing"]),
        Word(word="zoo", categories=["animal"]),
        Word(word="cake", categories=["food"]),
        Word(word="candy", categories=["food"]),
        Word(word="chair", categories=["thing"]),
        Word(word="cheese", categories=["food"]),
        Word(word="cookie", categories=["food"]),
        Word(word="pasta", categories=["food"]),
        Word(word="sugar", categories=["food"]),
        # Original 150 Pokemon
        Word(word="bulbasaur", categories=["pokemon"]),
        Word(word="ivysaur", categories=["pokemon"]),
        Word(word="venusaur", categories=["pokemon"]),
        Word(word="charmander", categories=["pokemon"]),
        Word(word="charmeleon", categories=["pokemon"]),
        Word(word="charizard", categories=["pokemon"]),
        Word(word="squirtle", categories=["pokemon"]),
        Word(word="wartortle", categories=["pokemon"]),
        Word(word="blastoise", categories=["pokemon"]),
        Word(word="caterpie", categories=["pokemon"]),
        Word(word="metapod", categories=["pokemon"]),
        Word(word="butterfree", categories=["pokemon"]),
        Word(word="weedle", categories=["pokemon"]),
        Word(word="kakuna", categories=["pokemon"]),
        Word(word="beedrill", categories=["pokemon"]),
        Word(word="pidgey", categories=["pokemon"]),
        Word(word="pidgeotto", categories=["pokemon"]),
        Word(word="pidgeot", categories=["pokemon"]),
        Word(word="rattata", categories=["pokemon"]),
        Word(word="raticate", categories=["pokemon"]),
        Word(word="spearow", categories=["pokemon"]),
        Word(word="fearow", categories=["pokemon"]),
        Word(word="ekans", categories=["pokemon"]),
        Word(word="arbok", categories=["pokemon"]),
        Word(word="pikachu", categories=["pokemon"]),
        Word(word="raichu", categories=["pokemon"]),
        Word(word="sandshrew", categories=["pokemon"]),
        Word(word="sandslash", categories=["pokemon"]),
        Word(word="nidoran", categories=["pokemon"]),
        Word(word="nidorina", categories=["pokemon"]),
        Word(word="nidoqueen", categories=["pokemon"]),
        Word(word="nidorino", categories=["pokemon"]),
        Word(word="nidoking", categories=["pokemon"]),
        Word(word="clefairy", categories=["pokemon"]),
        Word(word="clefable", categories=["pokemon"]),
        Word(word="vulpix", categories=["pokemon"]),
        Word(word="ninetales", categories=["pokemon"]),
        Word(word="jigglypuff", categories=["pokemon"]),
        Word(word="wigglytuff", categories=["pokemon"]),
        Word(word="zubat", categories=["pokemon"]),
        Word(word="golbat", categories=["pokemon"]),
        Word(word="oddish", categories=["pokemon"]),
        Word(word="gloom", categories=["pokemon"]),
        Word(word="vileplume", categories=["pokemon"]),
        Word(word="paras", categories=["pokemon"]),
        Word(word="parasect", categories=["pokemon"]),
        Word(word="venonat", categories=["pokemon"]),
        Word(word="venomoth", categories=["pokemon"]),
        Word(word="diglett", categories=["pokemon"]),
        Word(word="dugtrio", categories=["pokemon"]),
        Word(word="meowth", categories=["pokemon"]),
        Word(word="persian", categories=["pokemon"]),
        Word(word="psyduck", categories=["pokemon"]),
        Word(word="golduck", categories=["pokemon"]),
        Word(word="mankey", categories=["pokemon"]),
        Word(word="primeape", categories=["pokemon"]),
        Word(word="growlithe", categories=["pokemon"]),
        Word(word="arcanine", categories=["pokemon"]),
        Word(word="poliwag", categories=["pokemon"]),
        Word(word="poliwhirl", categories=["pokemon"]),
        Word(word="poliwrath", categories=["pokemon"]),
        Word(word="abra", categories=["pokemon"]),
        Word(word="kadabra", categories=["pokemon"]),
        Word(word="alakazam", categories=["pokemon"]),
        Word(word="machop", categories=["pokemon"]),
        Word(word="machoke", categories=["pokemon"]),
        Word(word="machamp", categories=["pokemon"]),
        Word(word="bellsprout", categories=["pokemon"]),
        Word(word="weepinbell", categories=["pokemon"]),
        Word(word="victreebel", categories=["pokemon"]),
        Word(word="tentacool", categories=["pokemon"]),
        Word(word="tentacruel", categories=["pokemon"]),
        Word(word="geodude", categories=["pokemon"]),
        Word(word="graveler", categories=["pokemon"]),
        Word(word="golem", categories=["pokemon"]),
        Word(word="ponyta", categories=["pokemon"]),
        Word(word="rapidash", categories=["pokemon"]),
        Word(word="slowpoke", categories=["pokemon"]),
        Word(word="slowbro", categories=["pokemon"]),
        Word(word="magnemite", categories=["pokemon"]),
        Word(word="magneton", categories=["pokemon"]),
        Word(word="farfetchd", categories=["pokemon"]),
        Word(word="doduo", categories=["pokemon"]),
        Word(word="dodrio", categories=["pokemon"]),
        Word(word="seel", categories=["pokemon"]),
        Word(word="dewgong", categories=["pokemon"]),
        Word(word="grimer", categories=["pokemon"]),
        Word(word="muk", categories=["pokemon"]),
        Word(word="shellder", categories=["pokemon"]),
        Word(word="cloyster", categories=["pokemon"]),
        Word(word="gastly", categories=["pokemon"]),
        Word(word="haunter", categories=["pokemon"]),
        Word(word="gengar", categories=["pokemon"]),
        Word(word="onix", categories=["pokemon"]),
        Word(word="drowzee", categories=["pokemon"]),
        Word(word="hypno", categories=["pokemon"]),
        Word(word="krabby", categories=["pokemon"]),
        Word(word="kingler", categories=["pokemon"]),
        Word(word="voltorb", categories=["pokemon"]),
        Word(word="electrode", categories=["pokemon"]),
        Word(word="exeggcute", categories=["pokemon"]),
        Word(word="exeggutor", categories=["pokemon"]),
        Word(word="cubone", categories=["pokemon"]),
        Word(word="marowak", categories=["pokemon"]),
        Word(word="hitmonlee", categories=["pokemon"]),
        Word(word="hitmonchan", categories=["pokemon"]),
        Word(word="koffing", categories=["pokemon"]),
        Word(word="rhyhorn", categories=["pokemon"]),
        Word(word="rhydon", categories=["pokemon"]),
        Word(word="chansey", categories=["pokemon"]),
        Word(word="tangela", categories=["pokemon"]),
        Word(word="kangaskhan", categories=["pokemon"]),
        Word(word="horsea", categories=["pokemon"]),
        Word(word="seadra", categories=["pokemon"]),
        Word(word="goldeen", categories=["pokemon"]),
        Word(word="seaking", categories=["pokemon"]),
        Word(word="staryu", categories=["pokemon"]),
        Word(word="starmie", categories=["pokemon"]),
        Word(word="scyther", categories=["pokemon"]),
        Word(word="jynx", categories=["pokemon"]),
        Word(word="electabuzz", categories=["pokemon"]),
        Word(word="magmar", categories=["pokemon"]),
        Word(word="pinsir", categories=["pokemon"]),
        Word(word="tauros", categories=["pokemon"]),
        Word(word="magikarp", categories=["pokemon"]),
        Word(word="gyarados", categories=["pokemon"]),
        Word(word="lapras", categories=["pokemon"]),
        Word(word="ditto", categories=["pokemon"]),
        Word(word="eevee", categories=["pokemon"]),
        Word(word="vaporeon", categories=["pokemon"]),
        Word(word="jolteon", categories=["pokemon"]),
        Word(word="flareon", categories=["pokemon"]),
        Word(word="porygon", categories=["pokemon"]),
        Word(word="omanyte", categories=["pokemon"]),
        Word(word="omastar", categories=["pokemon"]),
        Word(word="kabuto", categories=["pokemon"]),
        Word(word="kabutops", categories=["pokemon"]),
        Word(word="aerodactyl", categories=["pokemon"]),
        Word(word="snorlax", categories=["pokemon"]),
        Word(word="articuno", categories=["pokemon"]),
        Word(word="zapdos", categories=["pokemon"]),
        Word(word="moltres", categories=["pokemon"]),
        Word(word="dratini", categories=["pokemon"]),
        Word(word="dragonair", categories=["pokemon"]),
        Word(word="dragonite", categories=["pokemon"]),
        Word(word="mewtwo", categories=["pokemon"]),
        Word(word="mew", categories=["pokemon"]),
        Word(word="amsterdam", categories=["place"]),
        Word(word="athens", categories=["place"]),
        Word(word="atlanta", categories=["place"]),
        Word(word="baghdad", categories=["place"]),
        Word(word="bangkok", categories=["place"]),
        Word(word="barcelona", categories=["place"]),
        Word(word="beijing", categories=["place"]),
        Word(word="berlin", categories=["place"]),
        Word(word="boston", categories=["place"]),
        Word(word="broadway", categories=["place"]),
        Word(word="cairo", categories=["place"]),
        Word(word="chicago", categories=["place"]),
        Word(word="delhi", categories=["place"]),
        Word(word="dubai", categories=["place"]),
        Word(word="dublin", categories=["place"]),
        Word(word="florence", categories=["place"]),
        Word(word="geneva", categories=["place"]),
        Word(word="hollywood", categories=["place"]),
        Word(word="houston", categories=["place"]),
        Word(word="istanbul", categories=["place"]),
        Word(word="jakarta", categories=["place"]),
        Word(word="jerusalem", categories=["place"]),
        Word(word="kyoto", categories=["place"]),
        Word(word="lisbon", categories=["place"]),
        Word(word="madrid", categories=["place"]),
        Word(word="manhattan", categories=["place"]),
        Word(word="melbourne", categories=["place"]),
        Word(word="miami", categories=["place"]),
        Word(word="milan", categories=["place"]),
        Word(word="montreal", categories=["place"]),
        Word(word="moscow", categories=["place"]),
        Word(word="mumbai", categories=["place"]),
        Word(word="munich", categories=["place"]),
        Word(word="nairobi", categories=["place"]),
        Word(word="oslo", categories=["place"]),
        Word(word="paris", categories=["place"]),
        Word(word="phoenix", categories=["place"]),
        Word(word="prague", categories=["place"]),
        Word(word="rome", categories=["place"]),
        Word(word="seattle", categories=["place"]),
        Word(word="seoul", categories=["place"]),
        Word(word="shanghai", categories=["place"]),
        Word(word="singapore", categories=["place"]),
        Word(word="sydney", categories=["place"]),
        Word(word="taipei", categories=["place"]),
        Word(word="tokyo", categories=["place"]),
        Word(word="toronto", categories=["place"]),
        Word(word="venice", categories=["place"]),
        Word(word="vienna", categories=["place"]),
        Word(word="zurich", categories=["place"]),
        Word(word="test", categories=["place"]),
    ],
    "adjective": [
        Word(word="able", categories=["condition"]),
        Word(word="abundant", categories=["quantity"]),
        Word(word="acceptable", categories=["condition"]),
        Word(word="acoustic", categories=["sounds"]),
        Word(word="adorable", categories=["personality"]),
        Word(word="adventurous", categories=["personality"]),
        Word(word="agreeable", categories=["personality"]),
        Word(word="alert", categories=["condition"]),
        Word(word="alive", categories=["condition"]),
        Word(word="ambitious", categories=["personality"]),
        Word(word="ancient", categories=["time"]),
        Word(word="appetizing", categories=["taste"]),
        Word(word="attractive", categories=["appearance"]),
        Word(word="beautiful", categories=["appearance"]),
        Word(word="best", categories=["condition"]),
        Word(word="better", categories=["condition"]),
        Word(word="big", categories=["size"]),
        Word(word="billions", categories=["quantity"]),
        Word(word="blue", categories=["color"]),
        Word(word="boundless", categories=["personality"]),
        Word(word="brave", categories=["personality"]),
        Word(word="breezy", categories=["touch"]),
        Word(word="brief", categories=["time"]),
        Word(word="bright", categories=["appearance"]),
        Word(word="broad", categories=["shapes"]),
        Word(word="busy", categories=["personality"]),
        Word(word="calm", categories=["personality"]),
        Word(word="careful", categories=["condition"]),
        Word(word="clean", categories=["appearance"]),
        Word(word="clever", categories=["condition"]),
        Word(word="colossal", categories=["size"]),
        Word(word="cool", categories=["touch"]),
        Word(word="cuddly", categories=["touch"]),
        Word(word="curved", categories=["shapes"]),
        Word(word="dazzling", categories=["appearance"]),
        Word(word="delicious", categories=["taste"]),
        Word(word="delightful", categories=["personality"]),
        Word(word="early", categories=["time"]),
        Word(word="easy", categories=["condition"]),
        Word(word="elegant", categories=["appearance"]),
        Word(word="enough", categories=["quantity"]),
        Word(word="faithful", categories=["personality"]),
        Word(word="famous", categories=["condition"]),
        Word(word="fancy", categories=["appearance"]),
        Word(word="fast", categories=["time"]),
        Word(word="few", categories=["quantity"]),
        Word(word="fit", categories=["appearance"]),
        Word(word="fluffy", categories=["touch"]),
        Word(word="fresh", categories=["taste"]),
        Word(word="full", categories=["quantity"]),
        Word(word="future", categories=["time"]),
        Word(word="gentle", categories=["personality"]),
        Word(word="gifted", categories=["condition"]),
        Word(word="gigantic", categories=["size"]),
        Word(word="glamorous", categories=["appearance"]),
        Word(word="gorgeous", categories=["appearance"]),
        Word(word="gray", categories=["color"]),
        Word(word="great", categories=["size"]),
        Word(word="green", categories=["color"]),
        Word(word="handsome", categories=["appearance"]),
        Word(word="happy", categories=["personality"]),
        Word(word="helpful", categories=["condition"]),
        Word(word="high", categories=["shapes"]),
        Word(word="huge", categories=["size"]),
        Word(word="hundreds", categories=["quantity"]),
        Word(word="immense", categories=["size"]),
        Word(word="important", categories=["condition"]),
        Word(word="jolly", categories=["personality"]),
        Word(word="juicy", categories=["taste"]),
        Word(word="kind", categories=["personality"]),
        Word(word="late", categories=["time"]),
        Word(word="lemon", categories=["color"]),
        Word(word="little", categories=["quantity", "size"]),
        Word(word="lively", categories=["personality"]),
        Word(word="long", categories=["appearance", "time"]),
        Word(word="loud", categories=["sounds"]),
        Word(word="low", categories=["shapes"]),
        Word(word="magnificent", categories=["appearance"]),
        Word(word="mammoth", categories=["size"]),
        Word(word="mango", categories=["color"]),
        Word(word="many", categories=["quantity"]),
        Word(word="massive", categories=["size"]),
        Word(word="melodic", categories=["sounds"]),
        Word(word="microscopic", categories=["size"]),
        Word(word="millions", categories=["quantity"]),
        Word(word="miniature", categories=["size"]),
        Word(word="modern", categories=["time"]),
        Word(word="most", categories=["quantity"]),
        Word(word="muscular", categories=["appearance"]),
        Word(word="narrow", categories=["shapes"]),
        Word(word="nice", categories=["personality"]),
        Word(word="numerous", categories=["quantity"]),
        Word(word="nutritious", categories=["taste"]),
        Word(word="orange", categories=["color"]),
        Word(word="petite", categories=["size"]),
        Word(word="plain", categories=["appearance"]),
        Word(word="polite", categories=["personality"]),
        Word(word="powerful", categories=["condition"]),
        Word(word="prehistoric", categories=["time"]),
        Word(word="proud", categories=["personality"]),
        Word(word="purple", categories=["color"]),
        Word(word="purring", categories=["sounds"]),
        Word(word="quaint", categories=["appearance"]),
        Word(word="quick", categories=["time"]),
        Word(word="quiet", categories=["sounds"]),
        Word(word="rapid", categories=["time"]),
        Word(word="red", categories=["color"]),
        Word(word="refined", categories=["shapes"]),
        Word(word="rhythmic", categories=["sounds"]),
        Word(word="round", categories=["shapes"]),
        Word(word="salmon", categories=["color"]),
        Word(word="savory", categories=["taste"]),
        Word(word="shapely", categories=["appearance"]),
        Word(word="shy", categories=["condition"]),
        Word(word="small", categories=["size"]),
        Word(word="some", categories=["quantity"]),
        Word(word="spicy", categories=["taste"]),
        Word(word="square", categories=["shapes"]),
        Word(word="steep", categories=["shapes"]),
        Word(word="straight", categories=["shapes"]),
        Word(word="strong", categories=["touch"]),
        Word(word="substantial", categories=["quantity"]),
        Word(word="sweet", categories=["taste"]),
        Word(word="swift", categories=["time"]),
        Word(word="tall", categories=["size"]),
        Word(word="tangy", categories=["taste"]),
        Word(word="tasty", categories=["taste"]),
        Word(word="tender", categories=["condition"]),
        Word(word="thankful", categories=["personality"]),
        Word(word="thousands", categories=["quantity"]),
        Word(word="tiny", categories=["size"]),
        Word(word="warm", categories=["touch"]),
        Word(word="whispering", categories=["sounds"]),
        Word(word="wide", categories=["shapes"]),
        Word(word="witty", categories=["personality"]),
        Word(word="wonderful", categories=["personality"]),
        Word(word="wooden", categories=["touch"]),
        Word(word="young", categories=["time"]),
        Word(word="yummy", categories=["taste"]),
        Word(word="zealous", categories=["personality"]),
    ],
}


def get_words_by_category(part_of_speech: PartsOfSpeech, categories: list[str] | None = None) -> list[str]:
    """
    Get words by part of speech and categories.

    Args:
        part_of_speech: The part of speech to filter by ('noun' or 'adjective')
        categories: Optional list of categories to filter by

    Returns:
        List of words matching the criteria
    """
    if categories is None:
        categories = []

    selected_categories = set(categories)
    selected_words: list[str] = []

    for word in word_list[part_of_speech]:
        if not categories or any(cat in selected_categories for cat in word.categories):
            selected_words.append(word.word)

    return selected_words


def process_and_sort_word_list(word_list_dict: dict[str, list[Word]]) -> dict[str, list[Word]]:
    """
    Process the word list dictionary by:
    1. Merging duplicates (combining their categories)
    2. Sorting alphabetically

    Args:
        word_list_dict: Dictionary mapping part of speech to list of Word objects

    Returns:
        Processed dictionary with merged duplicates and sorted words
    """
    processed: dict[str, list[Word]] = {}

    for pos, words in word_list_dict.items():
        # Create a dictionary to merge duplicates
        word_map: dict[str, set[str]] = {}

        # Merge duplicates by combining their categories
        for word_obj in words:
            if word_obj.word not in word_map:
                word_map[word_obj.word] = set()
            word_map[word_obj.word].update(word_obj.categories)

        # Convert back to list of Word objects, sorted alphabetically
        processed[pos] = [
            Word(word=word, categories=sorted(list(categories))) for word, categories in sorted(word_map.items())
        ]

    return processed


# For development/debugging use to re-sort the list:
if __name__ == "__main__":
    processed_list = process_and_sort_word_list(word_list)
    for pos, words in processed_list.items():
        print(f'"{pos}": [')
        for word in words:
            print(f'    Word(word="{word.word}", categories={word.categories}),')
        print("],")
