"""add tmp provider for yapp

Revision ID: 2e3525fe99cf
Revises: 909aa91a1af8
Create Date: 2025-02-10 21:42:50.870142+00:00

"""
from collections.abc import Sequence
from uuid import UUID

from alembic import op
import sqlalchemy as sa
from sqlmodel import Session
import sqlmodel.sql.sqltypes

from ypl.backend.db import get_engine
from ypl.db.language_models import LanguageModel, LanguageModelStatusEnum, Organization, Provider


# revision identifiers, used by Alembic.
revision: str = '2e3525fe99cf'
down_revision: str | None = '909aa91a1af8'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None

YAPP_TMP_PROVIDER_NAME = "Yapp Temporary"
YAPP_TMP_PROVIDER_BASE_API_URL = "http://yapp-tmp0.yupp.ai/v1"
YAPP_TMP_PROVIDER_API_KEY_ENV_NAME = "YAPP_TMP_API_KEY" 
BSL_ORG_NAME = "Yupp BSL"
CREATOR_USER_ID = "SYSTEM"
CONTEXT_LENGTH = 1280000  # this is for the gpt-4o model
YAPP_METADATA = [
    ("Weather", "weather-yapp", 3006),
    ("YouTube Transcript", "youtube-transcript-yapp", 3007),
    ("News", "news-yapp", 3008),
    ("Wikipedia", "wikipedia-yapp", 3009),
]


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with Session(op.get_bind()) as session:
        provider = Provider(name=YAPP_TMP_PROVIDER_NAME,
                            base_api_url=YAPP_TMP_PROVIDER_BASE_API_URL,
                            api_key_env_name=YAPP_TMP_PROVIDER_API_KEY_ENV_NAME)
        session.add(provider)
        session.commit()
        session.refresh(provider)
        provider_id = provider.provider_id

        row_organization = session.exec(sa.select(Organization.organization_id).where(Organization.organization_name == BSL_ORG_NAME)).first()
        organization_id = row_organization[0] if row_organization else None

        for label, internal_name, port in YAPP_METADATA:
            session.add(LanguageModel(label=label,
                                    provider_id=provider_id,
                                    internal_name=internal_name,
                                    name=internal_name,
                                    organization_id=organization_id,
                                    is_pro=False,
                                    is_strong=False,
                                    context_length=CONTEXT_LENGTH,
                                    status=LanguageModelStatusEnum.INACTIVE,
                                    creator_user_id=CREATOR_USER_ID,
                                    semantic_group="yapp",
                                    parameters={"port": port},
                                    license_type="other",
                                    family="yapp",
                                    # available_models=?  # we don't have one yet
                                    ))
        session.commit()
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with Session(op.get_bind()) as session:
        # First delete all language models for this provider
        row = session.exec(sa.select(Provider).where(Provider.name == YAPP_TMP_PROVIDER_NAME)).first()
        if row:
            provider = row[0]
            session.exec(sa.delete(LanguageModel).where(LanguageModel.provider_id == provider.provider_id))
            # Then delete the provider itself
            session.delete(provider)
        session.commit()
    # ### end Alembic commands ###
