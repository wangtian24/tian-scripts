"""drop profile table

Revision ID: 2b7cfcb0ff81
Revises: c4832b474db6
Create Date: 2025-02-04 19:45:51.915273+00:00

"""
from collections.abc import Sequence

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2b7cfcb0ff81'
down_revision: str | None = 'c4832b474db6'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_user_profiles_country', table_name='user_profiles')
    op.drop_table('user_profiles')
    sa.Enum('INDIVIDUAL', 'BUSINESS', name='profiletypeenum').drop(op.get_bind())
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('INDIVIDUAL', 'BUSINESS', name='profiletypeenum').create(op.get_bind())
    op.create_table('user_profiles',
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("(now() AT TIME ZONE 'utc'::text)"), autoincrement=False, nullable=True),
    sa.Column('modified_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("(now() AT TIME ZONE 'utc'::text)"), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('educational_institution', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('country', sa.VARCHAR(length=2), autoincrement=False, nullable=True),
    sa.Column('discord_username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('profile_type', postgresql.ENUM('INDIVIDUAL', 'BUSINESS', name='profiletypeenum', create_type=False), autoincrement=False, nullable=True),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date_of_birth', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('address_line1', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('address_line2', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('state_province', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('postal_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='fk_user_profiles_user_id_users'),
    sa.PrimaryKeyConstraint('user_id', name='pk_user_profiles')
    )
    op.create_index('ix_user_profiles_country', 'user_profiles', ['country'], unique=False)
    # ### end Alembic commands ###
