"""create new IP tables to keep track of user ip association

Revision ID: 18dc48d949ed
Revises: 7847fcfc6d48
Create Date: 2025-02-10 06:46:11.279702+00:00

"""
from collections.abc import Sequence

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = '18dc48d949ed'
down_revision: str | None = '7847fcfc6d48'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ips',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(now() AT TIME ZONE 'utc')"), nullable=True),
    sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text("(now() AT TIME ZONE 'utc')"), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('ip', sa.Text(), nullable=False),
    sa.Column('hostname', sa.Text(), nullable=True),
    sa.Column('city', sa.Text(), nullable=True),
    sa.Column('region', sa.Text(), nullable=True),
    sa.Column('country', sa.Text(), nullable=True),
    sa.Column('loc', sa.Text(), nullable=True),
    sa.Column('org', sa.Text(), nullable=True),
    sa.Column('postal', sa.Text(), nullable=True),
    sa.Column('timezone', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('ip', name=op.f('pk_ips'))
    )
    op.create_table('user_ip_details',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(now() AT TIME ZONE 'utc')"), nullable=True),
    sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text("(now() AT TIME ZONE 'utc')"), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.Text(), nullable=False),
    sa.Column('ip', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['ip'], ['ips.ip'], name=op.f('fk_user_ip_details_ip_ips'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name=op.f('fk_user_ip_details_user_id_users'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'ip', name=op.f('pk_user_ip_details'))
    )
    op.create_index('ix_user_ip_details_ip', 'user_ip_details', ['ip'], unique=False)
    op.create_index('ix_user_ip_details_user_id', 'user_ip_details', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_user_ip_details_user_id', table_name='user_ip_details')
    op.drop_index('ix_user_ip_details_ip', table_name='user_ip_details')
    op.drop_table('user_ip_details')
    op.drop_table('ips')
    # ### end Alembic commands ###
