"""add app feedback table

Revision ID: 21e6c2e8d13c
Revises: 88c3904cd8e0
Create Date: 2025-01-29 18:45:10.015334+00:00

"""
from collections.abc import Sequence

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = '21e6c2e8d13c'
down_revision: str | None = '88c3904cd8e0'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('app_feedback',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(now() AT TIME ZONE 'utc')"), nullable=True),
    sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text("(now() AT TIME ZONE 'utc')"), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('feedback_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Text(), nullable=False),
    sa.Column('chat_id', sa.Uuid(), nullable=True),
    sa.Column('user_comment', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['chat_id'], ['chats.chat_id'], name=op.f('fk_app_feedback_chat_id_chats')),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name=op.f('fk_app_feedback_user_id_users')),
    sa.PrimaryKeyConstraint('feedback_id', name=op.f('pk_app_feedback'))
    )
    op.create_index(op.f('ix_app_feedback_chat_id'), 'app_feedback', ['chat_id'], unique=False)
    op.create_index(op.f('ix_app_feedback_user_id'), 'app_feedback', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_app_feedback_user_id'), table_name='app_feedback')
    op.drop_index(op.f('ix_app_feedback_chat_id'), table_name='app_feedback')
    op.drop_table('app_feedback')
    # ### end Alembic commands ###
