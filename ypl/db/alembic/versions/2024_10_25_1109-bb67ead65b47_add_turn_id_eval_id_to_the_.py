"""Add turn_id, eval_id to the RewardActionLog table

Revision ID: bb67ead65b47
Revises: 83c9625a31c2
Create Date: 2024-10-25 11:09:28.352879+00:00

"""
from collections.abc import Sequence

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = 'bb67ead65b47'
down_revision: str | None = '83c9625a31c2'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('reward_action_logs', sa.Column('turn_id', sa.Uuid(), nullable=True))
    op.add_column('reward_action_logs', sa.Column('eval_id', sa.Uuid(), nullable=True))
    op.create_foreign_key(op.f('fk_reward_action_logs_eval_id_evals'), 'reward_action_logs', 'evals', ['eval_id'], ['eval_id'])
    op.create_foreign_key(op.f('fk_reward_action_logs_turn_id_turns'), 'reward_action_logs', 'turns', ['turn_id'], ['turn_id'])
    # ### end auto generated Alembic commands ###

    with op.get_context().autocommit_block():
        op.execute("UPDATE reward_action_logs SET turn_id = (action_details->>'turn_id')::uuid WHERE action_type = 'EVALUATION' and action_details->>'turn_id' IS NOT NULL")
        op.execute("UPDATE reward_action_logs SET eval_id = (action_details->>'eval_id')::uuid WHERE action_type = 'EVALUATION' and action_details->>'eval_id' IS NOT NULL")


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('fk_reward_action_logs_turn_id_turns'), 'reward_action_logs', type_='foreignkey')
    op.drop_constraint(op.f('fk_reward_action_logs_eval_id_evals'), 'reward_action_logs', type_='foreignkey')
    op.drop_column('reward_action_logs', 'eval_id')
    op.drop_column('reward_action_logs', 'turn_id')
    # ### end Alembic commands ###
