"""Add discord_id to users table and create a new waitlisted_users table

Revision ID: e4ed0bc903f0
Revises: 12258ea10905
Create Date: 2024-12-04 00:01:36.427815+00:00

"""
from collections.abc import Sequence

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e4ed0bc903f0'
down_revision: str | None = '12258ea10905'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('ALLOWED', 'DENIED', 'PENDING', name='waitliststatus').create(op.get_bind())
    op.create_table('waitlisted_users',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(now() AT TIME ZONE 'utc')"), nullable=True),
    sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text("(now() AT TIME ZONE 'utc')"), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('waitlisted_user_id', sa.Uuid(), nullable=False),
    sa.Column('email', sa.Text(), nullable=False),
    sa.Column('status', postgresql.ENUM('ALLOWED', 'DENIED', 'PENDING', name='waitliststatus', create_type=False), server_default='PENDING', nullable=False),
    sa.Column('referrer_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['referrer_id'], ['users.user_id'], name=op.f('fk_waitlisted_users_referrer_id_users')),
    sa.PrimaryKeyConstraint('waitlisted_user_id', name=op.f('pk_waitlisted_users'))
    )
    op.create_index(op.f('ix_waitlisted_users_email'), 'waitlisted_users', ['email'], unique=True)
    op.add_column('users', sa.Column('discord_id', sa.Text(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'discord_id')
    op.drop_index(op.f('ix_waitlisted_users_email'), table_name='waitlisted_users')
    op.drop_table('waitlisted_users')
    sa.Enum('ALLOWED', 'DENIED', 'PENDING', name='waitliststatus').drop(op.get_bind())
    # ### end Alembic commands ###
