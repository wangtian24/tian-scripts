"""added creator_user_id to users table

Revision ID: 1293a4867b20
Revises: d800258eaf87
Create Date: 2024-10-05 06:46:57.245991+00:00

"""
from collections.abc import Sequence

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = '1293a4867b20'
down_revision: str | None = 'd800258eaf87'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('creator_user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.create_foreign_key(op.f('fk_users_creator_user_id_users'), 'users', 'users', ['creator_user_id'], ['user_id'])
    
    # Create SYSTEM user
    op.execute("""
    INSERT INTO users (user_id, name, email, email_verified, image, created_at, points, backfill_job_id, creator_user_id)
    VALUES ('SYSTEM', 'SYSTEM', 'system@yupp.ai', NOW(), NULL, NOW(), 0, NULL, NULL)
    """)
    
    # Set creator_user_id to 'SYSTEM' for all existing rows except the SYSTEM user itself
    op.execute("""
    UPDATE users
    SET creator_user_id = 'SYSTEM'
    WHERE user_id != 'SYSTEM'
    """)
    # ### end Alembic commands ###


def downgrade() -> None:
    # Remove the creator_user_id values
    op.execute("UPDATE users SET creator_user_id = NULL")

    # Remove the SYSTEM user
    op.execute("DELETE FROM users WHERE user_id = 'SYSTEM'")

    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('fk_users_creator_user_id_users'), 'users', type_='foreignkey')
    op.drop_column('users', 'creator_user_id')
    # ### end Alembic commands ###
