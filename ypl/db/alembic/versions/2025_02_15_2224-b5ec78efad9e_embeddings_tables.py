"""embeddings tables

Revision ID: b5ec78efad9e
Revises: 099ea2aa439a
Create Date: 2025-02-15 22:24:19.308129+00:00

"""
from collections.abc import Sequence

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from pgvector.sqlalchemy import Vector
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b5ec78efad9e'
down_revision: str | None = '099ea2aa439a'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('chat_message_embeddings',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(now() AT TIME ZONE 'utc')"), nullable=True),
    sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text("(now() AT TIME ZONE 'utc')"), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('chat_message_embedding_id', sa.Uuid(), nullable=False),
    sa.Column('message_id', sa.Uuid(), nullable=False),
    sa.Column('embedding', Vector(dim=1536), nullable=False),
    sa.Column('embedding_model_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['message_id'], ['chat_messages.message_id'], name=op.f('fk_chat_message_embeddings_message_id_chat_messages')),
    sa.PrimaryKeyConstraint('chat_message_embedding_id', name=op.f('pk_chat_message_embeddings'))
    )
    op.create_index(op.f('ix_chat_message_embeddings_message_id'), 'chat_message_embeddings', ['message_id'], unique=False)
    op.create_table('memory_embeddings',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(now() AT TIME ZONE 'utc')"), nullable=True),
    sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text("(now() AT TIME ZONE 'utc')"), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('memory_embedding_id', sa.Uuid(), nullable=False),
    sa.Column('memory_id', sa.Uuid(), nullable=False),
    sa.Column('embedding', Vector(dim=1536), nullable=False),
    sa.Column('embedding_model_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['memory_id'], ['memories.memory_id'], name=op.f('fk_memory_embeddings_memory_id_memories')),
    sa.PrimaryKeyConstraint('memory_embedding_id', name=op.f('pk_memory_embeddings'))
    )
    op.create_index(op.f('ix_memory_embeddings_memory_id'), 'memory_embeddings', ['memory_id'], unique=False)
    op.drop_column('chat_messages', 'content_pgvector')
    op.drop_constraint('fk_memories_embedding_model_id_embedding_models', 'memories', type_='foreignkey')
    op.drop_column('memories', 'embedding_model_id')
    op.drop_column('memories', 'content_pgvector')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('memories', sa.Column('content_pgvector', Vector(dim=1536), autoincrement=False, nullable=True))
    op.add_column('memories', sa.Column('embedding_model_id', sa.UUID(), autoincrement=False, nullable=True))
    op.create_foreign_key('fk_memories_embedding_model_id_embedding_models', 'memories', 'embedding_models', ['embedding_model_id'], ['embedding_model_id'])
    op.add_column('chat_messages', sa.Column('content_pgvector', Vector(dim=1536), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_memory_embeddings_memory_id'), table_name='memory_embeddings')
    op.drop_table('memory_embeddings')
    op.drop_index(op.f('ix_chat_message_embeddings_message_id'), table_name='chat_message_embeddings')
    op.drop_table('chat_message_embeddings')
    # ### end Alembic commands ###
