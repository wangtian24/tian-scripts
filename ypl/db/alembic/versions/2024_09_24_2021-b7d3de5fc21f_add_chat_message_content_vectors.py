"""add chat message content vectors

Revision ID: b7d3de5fc21f
Revises: 534ef201f7f9
Create Date: 2024-09-24 20:21:56.989504+00:00

"""
from collections.abc import Sequence

from alembic import op
import sqlalchemy as sa
from pgvector.sqlalchemy import Vector
from sqlalchemy.dialects.postgresql import TSVECTOR

# revision identifiers, used by Alembic.
revision: str = 'b7d3de5fc21f'
down_revision: str | None = '534ef201f7f9'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    op.execute('CREATE EXTENSION IF NOT EXISTS vector;')

    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('chat_messages', sa.Column('content_tsvector', TSVECTOR(), nullable=True))
    op.add_column('chat_messages', sa.Column('content_pgvector', Vector(dim=1536), nullable=True))
    op.execute("UPDATE chat_messages SET content_tsvector = to_tsvector('pg_catalog.english', content);")

    # TODO(carmen): get embeddings in python to populate content_pgvector

    op.execute("""
    CREATE TRIGGER chat_messages_vector_update
    BEFORE INSERT OR UPDATE ON chat_messages
    FOR EACH ROW
    EXECUTE FUNCTION tsvector_update_trigger(content_tsvector, 'pg_catalog.english', content);
    """)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DROP TRIGGER IF EXISTS chat_messages_vector_update ON chat_messages;")

    op.drop_column('chat_messages', 'content_pgvector')
    op.drop_column('chat_messages', 'content_tsvector')

    op.execute('DROP EXTENSION IF EXISTS vector;')
    # ### end Alembic commands ###