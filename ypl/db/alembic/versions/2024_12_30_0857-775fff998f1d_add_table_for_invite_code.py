"""Add table for invite code

Revision ID: 775fff998f1d
Revises: f53563be6fc0
Create Date: 2024-12-30 08:57:59.427034+00:00

"""
from collections.abc import Sequence

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '775fff998f1d'
down_revision: str | None = 'f53563be6fc0'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('INACTIVE', 'ACTIVE', 'FULLY_CLAIMED', name='specialinvitecodestate').create(op.get_bind())
    op.create_table('special_invite_codes',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(now() AT TIME ZONE 'utc')"), nullable=True),
    sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text("(now() AT TIME ZONE 'utc')"), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('special_invite_code_id', sa.Uuid(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('creator_user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('state', postgresql.ENUM('INACTIVE', 'ACTIVE', 'FULLY_CLAIMED', name='specialinvitecodestate', create_type=False), nullable=False),
    sa.ForeignKeyConstraint(['creator_user_id'], ['users.user_id'], name=op.f('fk_special_invite_codes_creator_user_id_users')),
    sa.PrimaryKeyConstraint('special_invite_code_id', name=op.f('pk_special_invite_codes'))
    )
    op.create_index(op.f('ix_special_invite_codes_code'), 'special_invite_codes', ['code'], unique=True)
    op.create_index(op.f('ix_special_invite_codes_creator_user_id'), 'special_invite_codes', ['creator_user_id'], unique=False)
    op.create_table('special_invite_code_claim_logs',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(now() AT TIME ZONE 'utc')"), nullable=True),
    sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text("(now() AT TIME ZONE 'utc')"), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('special_invite_code_claim_id', sa.Uuid(), nullable=False),
    sa.Column('special_invite_code_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['special_invite_code_id'], ['special_invite_codes.special_invite_code_id'], name=op.f('fk_special_invite_code_claim_logs_special_invite_code_id_special_invite_codes')),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name=op.f('fk_special_invite_code_claim_logs_user_id_users')),
    sa.PrimaryKeyConstraint('special_invite_code_claim_id', name=op.f('pk_special_invite_code_claim_logs')),
    sa.UniqueConstraint('special_invite_code_id', 'user_id', name=op.f('uq_special_invite_code_claim_logs_special_invite_code_id'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('special_invite_code_claim_logs')
    op.drop_index(op.f('ix_special_invite_codes_creator_user_id'), table_name='special_invite_codes')
    op.drop_index(op.f('ix_special_invite_codes_code'), table_name='special_invite_codes')
    op.drop_table('special_invite_codes')
    sa.Enum('INACTIVE', 'ACTIVE', 'FULLY_CLAIMED', name='specialinvitecodestate').drop(op.get_bind())
    # ### end Alembic commands ###
