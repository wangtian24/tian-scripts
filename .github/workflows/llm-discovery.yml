name: LLM Monitor Cronjob

on:
  schedule:
    - cron: "*/15 * * * *"  # Runs every 15 minutes
  workflow_dispatch:  # Allows manual execution

jobs:
  monitor_llm:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download previous llm-monitor-log artifact
        run: |
          echo "Attempting to download artifact from the previous run..."
          # List runs for this workflow (using its name) and pick the second one (i.e. the last completed run)
          PREV_RUN_ID=$(gh run list --workflow="LLM Monitor Cronjob" --limit 2 --json id,status,conclusion | jq -r '.[1].id // empty')
          if [ -n "$PREV_RUN_ID" ]; then
            echo "Downloading artifact from run ID: $PREV_RUN_ID"
            gh run download "$PREV_RUN_ID" --name llm-monitor-log
          else
            echo "No previous artifact found; creating an empty log directory."
            mkdir -p llm-monitor-log
          fi

      - name: Run LLM monitor script with secrets
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY_PRODUCTION }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY_PRODUCTION }}
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY_PRODUCTION }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY_PRODUCTION }}
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY_PRODUCTION }}
          TOGETHERAI_API_KEY: ${{ secrets.TOGETHERAI_API_KEY_PRODUCTION }}
          DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY_PRODUCTION }}
          MISTRAL_API_KEY: ${{ secrets.MISTRAL_API_KEY_PRODUCTION }}
          SLACK_MODEL_MANAGEMENT_APP_BOT_TOKEN: ${{ secrets.SLACK_MODEL_MANAGEMENT_APP_BOT_TOKEN_PRODUCTION }}
        run: |
          chmod +x ./scripts/llm-monitor.sh
          ./scripts/llm-monitor.sh ./llm-monitor-log

      - name: Upload LLM Monitor Log Artifact
        uses: actions/upload-artifact@v3
        with:
          name: llm-monitor-log
          path: llm-monitor-log/
          retention-days: 1
