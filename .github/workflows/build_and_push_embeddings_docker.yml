name: Build and Push Embedding Server Docker Image

on:
  workflow_dispatch:

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  IMAGE_NAME: gcr.io/yupp-llms/embeddings-server:latest


jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Remove unused content on github runners.
      - name: Free up space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt clean
          # TODO(ralph): figure out why this started failing.
          # docker rmi $(docker image ls -aq)
          df -h

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:latest
            network=host
          buildkitd-flags: --debug

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Create .env file
        run: |
            echo "GCP_PROJECT_ID=${{ env.GCP_PROJECT_ID }}" >> .env

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
  
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
  
      - name: Authenticate Docker
        run: gcloud auth configure-docker --quiet

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          cache-from: |
            type=gha
            type=registry,ref=${{ env.IMAGE_NAME }}
          file: ypl/embeddings/Dockerfile
          github-token: ${{ secrets.GITHUB_TOKEN }}
          labels: |
            org.opencontainers.image.created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
            org.opencontainers.image.revision=${{ github.sha }}
          push: true
          tags: ${{ env.IMAGE_NAME }}
