name: Update Docker Base

on:
  push:
    branches: [ staging ]
  schedule:
    - cron: '0 0 * * 1'  # Weekly on Monday at 12 AM UTC
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production
      region:
        description: 'Region to deploy to'
        required: true
        default: 'us-east4'
        type: choice
        options:
        - us-east4
        - us-central1
      dockerfile:
        description: 'Dockerfile to use'
        required: true
        default: 'Dockerfile.base'
        type: string


env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  DOCKERFILE: ${{ github.event.inputs.dockerfile || 'Dockerfile.base' }}
  IMAGE_NAME: "gcr.io/yupp-llms/backend-base:latest"
  REGION: ${{ github.event.inputs.region }}
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}

jobs:
  update-docker-base:
    runs-on: ubuntu-latest

    steps:
    # Remove unused content on github runners.
    - name: Free up space
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/ghc
        sudo rm -rf /usr/local/share/boost
        sudo apt clean
        df -h

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.11

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ env.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ env.GCP_PROJECT_ID }}

    - name: Authenticate Docker
      run: gcloud auth configure-docker --quiet

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/amd64
        push: true
        tags: ${{ env.IMAGE_NAME }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: ${{ env.DOCKERFILE }}
