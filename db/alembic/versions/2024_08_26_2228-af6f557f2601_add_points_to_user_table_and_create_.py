"""Add points to user table and create point_transactions table.

Revision ID: af6f557f2601
Revises: c46f020ab21c
Create Date: 2024-08-26 22:28:25.066848+00:00

"""
from collections.abc import Sequence

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'af6f557f2601'
down_revision: str | None = 'c46f020ab21c'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('UNKNOWN', 'SIGN_UP', 'PROMPT', 'EVALUATION', name='pointsactionenum').create(op.get_bind())
    op.create_table('point_transactions',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(now() AT TIME ZONE 'utc')"), nullable=True),
    sa.Column('modified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('transaction_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Text(), nullable=False),
    sa.Column('point_delta', sa.Integer(), nullable=False),
    sa.Column('action_type', postgresql.ENUM('UNKNOWN', 'SIGN_UP', 'PROMPT', 'EVALUATION', name='pointsactionenum', create_type=False), nullable=False),
    sa.Column('action_details', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('point_transactions_user_id_fkey')),
    sa.PrimaryKeyConstraint('transaction_id', name=op.f('pk_point_transactions'))
    )
    op.add_column('users', sa.Column('points', sa.Integer(), nullable=False, server_default='0'))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'points')
    op.drop_table('point_transactions')
    sa.Enum('UNKNOWN', 'SIGN_UP', 'PROMPT', 'EVALUATION', name='pointsactionenum').drop(op.get_bind())
    # ### end Alembic commands ###
