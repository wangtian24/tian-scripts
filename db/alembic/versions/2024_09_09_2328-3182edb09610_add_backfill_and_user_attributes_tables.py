"""Add backfill and user attributes tables

Revision ID: 3182edb09610
Revises: de6604182021
Create Date: 2024-09-09 23:28:15.013155+00:00

"""
from collections.abc import Sequence

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = '3182edb09610'
down_revision: str | None = 'de6604182021'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('synthetic_backfill_attributes',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(now() AT TIME ZONE 'utc')"), nullable=True),
    sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text("(now() AT TIME ZONE 'utc')"), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('num_users', sa.Integer(), nullable=False),
    sa.Column('num_attempted_chats_per_user', sa.Integer(), nullable=False),
    sa.Column('user_llm_model', sa.Text(), nullable=False),
    sa.Column('user_llm_temperature', sa.Float(), nullable=False),
    sa.Column('judge_models', sa.ARRAY(sa.Text()), nullable=False),
    sa.Column('judge_model_temperatures', sa.ARRAY(sa.Float()), nullable=False),
    sa.Column('git_commit_sha', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_synthetic_backfill_attributes'))
    )
    op.create_table('synthetic_user_attributes',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(now() AT TIME ZONE 'utc')"), nullable=True),
    sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text("(now() AT TIME ZONE 'utc')"), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('persona', sa.Text(), nullable=False),
    sa.Column('interests', sa.ARRAY(sa.Text()), nullable=False),
    sa.Column('style', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', name=op.f('pk_synthetic_user_attributes'))
    )
    op.add_column('evals', sa.Column('judge_model_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('users', sa.Column('backfill_job_id', sa.Uuid(), nullable=True))
    op.create_foreign_key(None, 'users', 'synthetic_backfill_attributes', ['backfill_job_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_column('users', 'backfill_job_id')
    op.drop_column('evals', 'judge_model_name')
    op.drop_table('synthetic_user_attributes')
    op.drop_table('synthetic_backfill_attributes')
    # ### end Alembic commands ###
